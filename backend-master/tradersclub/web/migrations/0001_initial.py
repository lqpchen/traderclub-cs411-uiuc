# Generated by Django 3.1.5 on 2021-03-06 10:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.RunSQL(
            """
                CREATE TABLE app_user (
                    id SERIAL PRIMARY KEY,
                    email VARCHAR UNIQUE,
                    full_name VARCHAR(256) NOT NULL,
                    password VARCHAR(256) NOT NULL
                );
            
                CREATE INDEX app_user_index ON app_user(email, password);            
            
                CREATE TABLE discussion_thread (
                    id SERIAL PRIMARY KEY,
                    content TEXT,
                    author_id INT NOT NULL,
                    created timestamp with time zone NOT NULL,
                    FOREIGN KEY (author_id) REFERENCES app_user(id) ON DELETE CASCADE
                );
            
                CREATE TABLE discussion_thread_reply (
                    id SERIAL PRIMARY KEY,
                    content TEXT,
                    discussion_thread_id INT NOT NULL,
                    author_id INT NOT NULL,
                    created timestamp with time zone NOT NULL,
                    FOREIGN KEY (discussion_thread_id) REFERENCES discussion_thread(id) ON DELETE CASCADE,
                    FOREIGN KEY (author_id) REFERENCES app_user(id) ON DELETE CASCADE
                );
        
                CREATE TABLE company (
                    id SERIAL PRIMARY KEY,
                    name VARCHAR(512) UNIQUE
                );
            
                CREATE TABLE stock_exchange (
                    id SERIAL PRIMARY KEY,
                    symbol VARCHAR(128),
                    country_code VARCHAR(16),
                    opening_time TIME,
                    closing_time TIME,
                    timezone_offset INT,
                    UNIQUE (symbol, country_code)
                );
            
                CREATE TABLE stock (
                    id SERIAL PRIMARY KEY,
                    symbol VARCHAR(32),
                    company_id INT NOT NULL,
                    stock_exchange_id INT NOT NULL,
                    FOREIGN KEY (company_id) REFERENCES company(id) ON DELETE CASCADE,
                    FOREIGN KEY (stock_exchange_id) REFERENCES stock_exchange(id) ON DELETE CASCADE,
                    UNIQUE (symbol, stock_exchange_id)
                );
            
                CREATE TABLE related_discussion_thread (
                    id SERIAL PRIMARY KEY,
                    discussion_thread_id INT NOT NULL,
                    stock_id INT NOT NULL,
                    FOREIGN KEY (discussion_thread_id) REFERENCES discussion_thread(id) ON DELETE CASCADE,
                    FOREIGN KEY (stock_id) REFERENCES stock(id) ON DELETE CASCADE
                );
            
                CREATE TABLE quote (
                    id SERIAL PRIMARY KEY,
                    quote_open NUMERIC(10,2),
                    quote_close NUMERIC(10,2),
                    quote_date DATE,
                    high NUMERIC(10,2),
                    low NUMERIC(10,2),
                    stock_id INT NOT NULL,
                    FOREIGN KEY (stock_id) REFERENCES stock(id) ON DELETE CASCADE,
                    UNIQUE (stock_id, quote_date)
                );
            
                CREATE TABLE app_user_favourite_stock (
                    app_user_id INT NOT NULL,
                    stock_id INT NOT NULL,
                    added_on TIMESTAMP WITH TIME ZONE NOT NULL,
                    FOREIGN KEY (app_user_id) REFERENCES app_user(id) ON DELETE CASCADE,
                    FOREIGN KEY (stock_id) REFERENCES stock(id) ON DELETE CASCADE,
                    UNIQUE (app_user_id, stock_id)
                );
            
                create table stock_article(
                    id bigserial,
                    headline varchar(2048) not null,
                    url varchar(2048) not null,
                    author_name varchar(512) not null,
                    stock_id bigint not null,
                    external_id varchar(1024) not null,
                    release_date timestamp not null,
                    content text not null,
                    primary key (id),
                    foreign key (stock_id) references stock(id) on delete cascade,
                    unique (stock_id, external_id)
                );
            """,
            reverse_sql = """
                drop table if exists discussionthreadreply cascade;
                drop table if exists indicator cascade;
                drop table if exists "quote" cascade;
                drop table if exists relateddiscussionthread cascade;
                drop table if exists discussionthread cascade;
                drop table if exists stockevent cascade;
                drop table if exists analysttargetpricechange cascade;
                drop table if exists stock_article cascade;
                drop table if exists secfiling cascade;
                drop table if exists userfavouritestock cascade;
                drop table if exists stock cascade;
                drop table if exists company cascade;
                drop table if exists stockexchange cascade;
                drop table if exists "user" cascade;
            """
        )
    ]
